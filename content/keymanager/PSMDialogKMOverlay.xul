<?xml version="1.0"?>
<!-- @(#) $Id: PSMDialogKMOverlay.xul,v 1.3 2010/12/24 20:04:23 subrata Exp $ -->

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Avaya Labs Research, Avaya Inc. Code.
   -
   - The Initial Developer of the Original Code is
   - Subrata Mazumdar, Avaya Labs Research, Avaya Inc.
   - Portions created by the Initial Developer are Copyright (C) 2007.
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Subrata Mazumdar (mazum@avaya.com)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->


<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://keymanager/locale/keyManager.dtd">

<!--
Source: http://xulplanet.com/tutorials/xultu/overlay.html
-->

<overlay id="psm.dialog.km.overlay"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    >

<script type="application/x-javascript">
<![CDATA[

window.addEventListener(
    "load",
    function(e){
	PSMDialogKMOverlay.init();
    },
    true
);

var PSMDialogKMOverlay = {

    mCRLSigningEnabled : false,

    init : function () 
    {
	this.loadToolsEnableOptions();

	var crlManagerOpenElem = document.getElementById("mine_key_openCRLManagerButton");
	crlManagerOpenElem.hidden = !this.mCRLSigningEnabled;
    },

    loadToolsEnableOptions : function () 
    {
	// dump("PSMDialogKMOverlay.loadToolsEnableOptions():................Start.\n");

	/*
    	var isLinux = (navigator.userAgent.indexOf("Linux") != -1);
    	var isMac = (navigator.userAgent.indexOf("Mac") != -1);
    	var isWin = (navigator.userAgent.indexOf("Win") != -1);
	*/

        do {
            try {
    	        var Prefs = Components.classes["@mozilla.org/preferences-service;1"]
			        .getService(Components.interfaces.nsIPrefService);
	        var prefBranchPrefixId = "keymgr.";
	        var prefsBranch = Prefs.getBranch(prefBranchPrefixId);
	        if (!prefsBranch) {
	    	    break;
	        }

                var prefBoolValue = prefsBranch.getBoolPref("crltool.enabled");
	        if (prefBoolValue) {
	    	    this.mCRLSigningEnabled = true;
	        }
            } catch (ex) {
	        // dump("PSMDialogKMOverlay.loadToolsEnableOptions():  unable to obtain preferences - ex: " + ex + "\n");
	    }
        } while (0);

        // dump("PSMDialogKMOverlay.loadToolsEnableOptions():  this.mCRLSigningEnabled: " + this.mCRLSigningEnabled + "\n");

	// dump("PSMDialogKMOverlay.loadToolsEnableOptions():................End.\n");
	return;
    },


    openCRLManager : function () 
    {
	dump("PSMDialogKMOverlay.openCRLManager():................Start.\n");

        // check for an existing CRLMnager window and focus it; it's not application modal
        const kWindowMediator = Components.classes["@mozilla.org/appshell/window-mediator;1"]
					.getService(Components.interfaces.nsIWindowMediator);
        var lastCrlManager = kWindowMediator.getMostRecentWindow("mozilla:crlmanager");
        if (lastCrlManager) {
            lastCrlManager.focus();
	    return;
	}
        window.open('chrome://pippki/content/crlManager.xul',  "crlmgr",
                      			'chrome,centerscreen,resizable');
	dump("PSMDialogKMOverlay.openCRLManager():................End.\n");
    },

    lastMethod : function () 
    {
    }
}


]]>
</script>

    <hbox id="mine_key_certCmdButtons">
       <!--
       <button id="mine_key_openCRLManagerButton" class="normal" 
               label="&keymgr.tab.mine.key.cmd.crlmanager.label;"
               tooltiptext="&keymgr.tab.mine.key.cmd.crlmanager.tooltip;"
               xdisabled="true" oncommand="PSMDialogKMOverlay.openCRLManager();"/>
       -->
    </hbox>

</overlay>

