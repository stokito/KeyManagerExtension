<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Avaya Labs Research, Avaya Inc. Code.
   -
   - The Initial Developer of the Original Code is
   - Subrata Mazumdar, Avaya Labs Research, Avaya Inc.
   - Portions created by the Initial Developer are Copyright (C) 2007.
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Subrata Mazumdar (mazum@avaya.com)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://keymanager/skin/kmbindings.css" type="text/css"?>

<!--

INSTALLATION Instructions:

For Thunderbird: 
    - Add the following statement in the chorme.manifest file:
    	overlay chrome://messenger/content/am-smime.xul  chrome://keymanager/content/tools/mailacctcert/am-smime-createCertOverlay.xul

For Seamonkey: 
    - contents.rdf file is initialized for the overlay
    - Add the following line in install.js file for chrome registration
      of contents.rdf : 
	registerChrome(contentFlag, folder, jarFolderName + "");

-->


<!DOCTYPE overlay
        [
        <!ENTITY % keyManager.dtd SYSTEM "chrome://keymanager/locale/keyManager.dtd">
        %keyManager.dtd;
	]>

<overlay id="am-smime-createCertWin"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    >

    <script type="application/x-javascript" src="am-smime-createCertOverlay.js"/>

    <groupbox id="signing.titlebox">
        <groupbox orient="horizontal" 
	    pack="start"
	    align="center"
	    >
	    <!--
            <button id="keymgr.smime.create.cert.button.signing"
  	        label="Create Signing Cert"
  	        tooltiptext="Click here to create message signing cert"
    	        insertbefore="signingCertSelectButton"
	        oncommand="AMSMIMECreateCert.smimeCreateSigningCert('identity.signing_cert_name', event)"
	        />
	    -->
            <createcertmenu id="keymgr.smime.create.cert.signing"
		oplabel="Create Signing Cert"
		createCertOp="createSelfSignedCert"
		selfsignedsimplehidden="true"
		selfproxyhidden="true"
		otpkhidden="true"
                oncommand="AMSMIMECreateCert.handleCreateSigningCert(this, 'identity.signing_cert_name', event)"
		/>
            <checkbox id="keymgr.smime.create.cert.signing.encalso"
		label="Enable cert for encryption too"
                oncommand="AMSMIMECreateCert.handleCreateSigningCertIncludeEnc(this, event)"
	    	/>
	</groupbox>
    </groupbox>

    <groupbox id="encryption.titlebox">
        <groupbox orient="horizontal" 
	    pack="start"
	    align="center"
	    >
	    <!--
            <button id="keymgr.smime.create.cert.button.encryption"
  		label="Create Encryption Cert"
  		tooltiptext="Click here to create message encryption cert"
    		insertbefore="encryptionCertSelectButton"
		oncommand="AMSMIMECreateCert.smimeCreateEncryptionCert('identity.encryption_cert_name', event)"
		/>
	    -->
            <createcertmenu id="keymgr.smime.create.cert.encryption"
  		oplabel="Create Encryption Cert"
		createCertOp="createSelfSignedCert"
		selfproxyhidden="true"
		otpkhidden="true"
                oncommand="AMSMIMECreateCert.handleCreateEncryptionCert(this, 'identity.encryption_cert_name', event)"
		/>
            <checkbox id="keymgr.smime.create.cert.encryption.signalso"
		label="Enable cert for signing too"
                oncommand="AMSMIMECreateCert.handleCreateEncryptionCertIncludeSign(this, event)"
	    	/>
	</groupbox>
    </groupbox>

</overlay>

