<?xml version="1.0"?>
<!-- @(#) $Id: CertEnrollToolsOverlay.xul,v 1.7 2012/10/07 17:20:03 subrata Exp $ -->

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Avaya Labs Research, Avaya Inc. Code.
   -
   - The Initial Developer of the Original Code is
   - Subrata Mazumdar, Avaya Labs Research, Avaya Inc.
   - Portions created by the Initial Developer are Copyright (C) 2007.
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Subrata Mazumdar (mazum@avaya.com)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->



<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://keymanager/locale/keymanagerOverlay.dtd">

<overlay id="certenroll.overlay.win"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    >

<script type="application/x-javascript">
<![CDATA[

window.addEventListener(
  "load",
  function (e) {
    avpki.keymanager.CertEnrollOverlay.activateTool(e);
  },
  false
);

if ((typeof avpki) == 'undefined') {
    var avpki = {};
    avpki.keymanager = {};
}
if ((typeof avpki.keymanager) == 'undefined') {
    avpki.keymanager = {};
}

avpki.keymanager.CertEnrollOverlay = {
  activateTool : function ()
  {
    // Note:  
    // Enable Cert enrollment conditinally. 
    // Cert enrollment wizard is enabled if the 'keymgr.certenroll.enabled' preference is
    // set to true.

    var certEnrollEnabled = false;
    do {
        var Prefs = Components.classes["@mozilla.org/preferences-service;1"]
			.getService(Components.interfaces.nsIPrefService);
        try {
                var prefsBranch = Prefs.getBranch("");
                if (!prefsBranch) {
    	            break;
                }

                var prefBoolValue = prefsBranch.getBoolPref("extensions.avpki.certenroll.enabled");
	        if (prefBoolValue) {
	            certEnrollEnabled = true;
	        }
        } catch (ex) {
	    	this.logDebug("CertEnrollOverlay.activateTool():  ex: " + ex);
	}
    } while (0);


    var certEnrollMenuItemIdList = [
    		"keymanager.certenroll.wizard.ff.menuitem",
    		"keymanager.certenroll.wizard.moz.menuitem",
    		"keymanager.certenroll.wizard.sb.menuitem"
		];

    const  disabledTooltiptext = "Wizard for cert enrollment with CA is not supported by default. You can override this poilcy by setting 'keymgr.certenroll.enabled' preference to 'true'.";

    for (var i = 0; i < certEnrollMenuItemIdList.length; i++) {
    	var certEnrollMenuItemId = certEnrollMenuItemIdList[i];
	var certEnrollMenuItemElem = document.getElementById(certEnrollMenuItemId);
	if (!certEnrollMenuItemElem) {
	    continue;
	}
	if (!certEnrollEnabled) {
	    certEnrollMenuItemElem.setAttribute("hidden", true);
	    continue;
	}
	certEnrollMenuItemElem.removeAttribute("hidden");

	/*
	if ((browserProxyType > 0) && !htmlDSigProxyOverride) {
	    var disabledTooltip = certEnrollMenuItemElem.getAttribute("disabledTooltip");
	    if (!disabledTooltip) {
	    	disabledTooltip = disabledTooltiptext;
	    }
	    certEnrollMenuItemElem.setAttribute("disabled", true);
	    certEnrollMenuItemElem.setAttribute("tooltiptext", disabledTooltip);
	}
	else {
	    certEnrollMenuItemElem.removeAttribute("disabled");
	    certEnrollMenuItemElem.removeAttribute("tooltiptext");
	}
	*/
    }
  },


  runCertEnrollWizard : function ()
  {
    keymanagerOverlay_loginToInternalKeyToken();

    var certEnrollWizardURL = "chrome://keymanager/content/tools/certenroll/CertEnrollWizard.xul";

    // getWindowMediator() is defined in keymanagerOverlay.xul which is container for this overlay.

    //check for an existing Cert Enroll tool window and focus it; it's not application modal
    var kWindowMediator = getWindowMediator();
    var lastCertEnrollTool = kWindowMediator.getMostRecentWindow("avaya:certenroll");

    if (lastCertEnrollTool) {
        lastCertEnrollTool.focus();
    }
    else {
    	window.openDialog(certEnrollWizardURL, 'certenroll', 'chrome,centerscreen,resizable=yes,dialog=no,titlebar');
    }
  }

};
 
]]>
</script>


///////////////////////////////////////////////////////////////////
// Tools menu.
///////////////////////////////////////////////////////////////////
<!-- 
  Source: http://kb.mozillazine.org/Extension_guidelines
-->

///////////////////////////////////////////////////////////////////
// Firefox menu.
///////////////////////////////////////////////////////////////////
<!--
<menupopup id="menu_ToolsPopup">
  <menu id="menu_AvLabsKeyManagerToolbox"
    >
    <menupopup id="menu_AvLabsKeyManagerToolboxPopup">
        <menuitem id="keymanager.certenroll.wizard.ff.menuitem"
	    label="&keymanager.certenroll.overlay.title; (v &keymanager.version;)"
            oncommand="avpki.keymanager.CertEnrollOverlay.runCertEnrollWizard();"
            />
    </menupopup>
  </menu>
</menupopup>
-->

///////////////////////////////////////////////////////////////////
// Mozilla/Seamonkey/Thunderbird menu.
///////////////////////////////////////////////////////////////////
<menupopup id="taskPopup">
  <menu id="menu_AvLabsKeyManagerToolbox">
      <menupopup id="menu_AvLabsKeyManagerToolboxPopup">

          <menuitem id="keymanager.certenroll.wizard.moz.menuitem"
	      label="&keymanager.certenroll.overlay.title; (v &keymanager.version;)"
              oncommand="avpki.keymanager.CertEnrollOverlay.runCertEnrollWizard();"
              />
      </menupopup>
  </menu>
</menupopup>

///////////////////////////////////////////////////////////////////
// Sunbird menu.
///////////////////////////////////////////////////////////////////
<menupopup id="toolsPopup">
  <menu id="menu_AvLabsKeyManagerToolbox">
    <menupopup id="menu_AvLabsKeyManagerToolboxPopup">
          <menuitem id="keymanager.certenroll.wizard.sb.menuitem"
	      label="&keymanager.certenroll.overlay.title; (v &keymanager.version;)"
              oncommand="avpki.keymanager.CertEnrollOverlay.runCertEnrollWizard();"
              />

    </menupopup>
  </menu>
</menupopup>

///////////////////////////////////////////////////////////////////
// Spicebird menu.
///////////////////////////////////////////////////////////////////
<menupopup id="tools-developer-menupopup">
  <menu id="menu_AvLabsKeyManagerToolbox">
    <menupopup id="menu_AvLabsKeyManagerToolboxPopup">
          <menuitem id="keymanager.certenroll.wizard.spb.menuitem"
	      label="&keymanager.certenroll.overlay.title; (v &keymanager.version;)"
              oncommand="avpki.keymanager.CertEnrollOverlay.runCertEnrollWizard();"
              />
    </menupopup>
  </menu>
</menupopup>


</overlay>

