<?xml version="1.0"?>
<!-- @(#) $Id: SSHClientDialogKMOverlay.xul,v 1.4 2012/10/07 17:21:11 subrata Exp $ -->

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Avaya Labs Research, Avaya Inc. Code.
   -
   - The Initial Developer of the Original Code is
   - Subrata Mazumdar, Avaya Labs Research, Avaya Inc.
   - Portions created by the Initial Developer are Copyright (C) 2007.
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Subrata Mazumdar (mazum@avaya.com)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->


<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://keymanager/locale/sshclient.dtd">

<!--
Source: http://xulplanet.com/tutorials/xultu/overlay.html
-->

<overlay id="sshclient.dialog.km.overlay"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    >

<script type="application/x-javascript">
<![CDATA[

window.addEventListener(
    "load",
    function(e){
	SSHClientDialogKMOverlay.init();
    },
    true
);

var SSHClientDialogKMOverlay = {

    init : function () 
    {
	var sshclientEnabled = this.isToolEnabled();

	var sshClientDialogElem = document.getElementById("sshclient_Button");
	sshClientDialogElem.disabled = !sshclientEnabled;
    },

    isToolEnabled : function () 
    {
	// dump("SSHClientDialogKMOverlay.isToolEnabled():................Start.\n");

        var sshclientEnabled = false;
	/*
    	var isLinux = (navigator.userAgent.indexOf("Linux") != -1);
    	var isMac = (navigator.userAgent.indexOf("Mac") != -1);
	*/
    	var isWin = (navigator.userAgent.indexOf("Win") != -1);
	// dump("SSHClientDialogKMOverlay.isToolEnabled(): isWin: " + isWin + "\n");
	if (isWin) {
	    // SSHClient is not supported on Windows.
	    return sshclientEnabled;
	}

        do {
            try {
    	        var Prefs = Components.classes["@mozilla.org/preferences-service;1"]
			        .getService(Components.interfaces.nsIPrefService);
	        var prefBranchPrefixId = "";
	        var prefsBranch = Prefs.getBranch(prefBranchPrefixId);
	        if (!prefsBranch) {
	    	    break;
	        }

                var prefBoolValue = prefsBranch.getBoolPref("extensions.avpki.sshclient.enabled");
	        if (prefBoolValue) {
	    	    sshclientEnabled = true;
	        }
            } catch (ex) {
	        // dump("SSHClientDialogKMOverlay.isToolEnabled():  unable to obtain preferences - ex: " + ex + "\n");
	    }
        } while (0);

        // dump("SSHClientDialogKMOverlay.isToolEnabled():  sshclientEnabled: " + sshclientEnabled + "\n");

	// dump("SSHClientDialogKMOverlay.isToolEnabled():................End.\n");
	return sshclientEnabled;
    },


    openSSHClientDialog : function () 
    {
    	var sshClientDialogURL = "chrome://keymanager/content/tools/sshclient/SSHClientDialog.xul";

	var keyX509Cert = null;

    	getSelectedCerts();
        var numcerts = selected_certs.length;
        if (numcerts == 1) {
	    keyX509Cert = selected_certs[0];
        }

    	var pkiParams = Components.classes["@mozilla.org/security/pkiparamblock;1"]
    				.createInstance(Components.interfaces.nsIPKIParamBlock);
    	var dialogParams = pkiParams.QueryInterface(Components.interfaces.nsIDialogParamBlock);

    	pkiParams.setISupportAtIndex(1, null);
    	if (keyX509Cert) {
    	    pkiParams.setISupportAtIndex(1, keyX509Cert);
    	}

    	// getWindowMediator() is defined in keymanagerOverlay.xul which is container for this overlay.
    	var kWindowMediator = getWindowMediator();

    	// check for an existing SSH Client Dialog window and focus it; it's not application modal
    	var lastSSHClient = kWindowMediator.getMostRecentWindow("avaya:sshclient");
    	if (lastSSHClient) {
            lastSSHClient.focus();
    	}
    	else {
    	    window.openDialog(
		        sshClientDialogURL,
		        'sshclient',
		        'chrome,centerscreen,resizable,dialog=no,titlebar',
		        dialogParams
			);
    	}
    },

    lastMethod : function () 
    {
    }
}


]]>
</script>

      <hbox id="mine_key_keyCmdButtons">
          <button id="sshclient_Button"
              label="&keymgr.sshclient.open.dialog.label;"
              tooltiptext="&keymgr.sshclient.open.dialog.tooltip;"
              insertafter="mine_key_signProxyCertButton"
              oncommand="SSHClientDialogKMOverlay.openSSHClientDialog();"
	      />
      </hbox>

</overlay>

