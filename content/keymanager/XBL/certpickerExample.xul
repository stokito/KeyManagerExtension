<?xml version="1.0"?>
<!-- @(#) $Id: certpickerExample.xul,v 1.14 2010/01/04 05:54:15 subrata Exp $ -->

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Avaya Labs Research, Avaya Inc. Code.
   -
   - The Initial Developer of the Original Code is
   - Subrata Mazumdar, Avaya Labs Research, Avaya Inc.
   - Portions created by the Initial Developer are Copyright (C) 2007.
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Subrata Mazumdar (mazum@avaya.com)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->


<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://keymanager/skin/kmbindings.css" type="text/css"?>

<!DOCTYPE window
    	[
	<!ENTITY % certManager.dtd SYSTEM "chrome://pippki/locale/certManager.dtd">
	%certManager.dtd;
	<!ENTITY % keyManager.dtd SYSTEM "chrome://keymanager/locale/keyManager.dtd">
	%keyManager.dtd;
	]>

<window id="keymanager.certpicker.win"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    onload="CertPicker_initWin();"
    onunload="CertPicker_uninitWin(event);"
    >

    <script type="application/x-javascript" src="chrome://keymanager/content/XBL/certpickerExample.js"/>


    <grid flex="1" debug="true"> 
        <columns>
          <column/>
          <column flex="1"/>
        </columns>
        <rows flex="1">

	  <!--
          <row>
	    <spacer/>
	    <hbox
	    	oncommand="handleCertUsageChangeX(event.target, event.originalTarget)"
		>
		<certusagemenu id="keymanager.certusagemenu.1"
		    value="ObjectSigner"
		    noncaonly="true"
		    oncommand="handleCertUsageChangeX(this, event.originalTarget)"
		    />
		</hbox>
          </row>

          <row>
	    <spacer/>
	    <hbox pack="start">
                <certificateusagemenu id="keymanager.certificateusagemenu.1"
                    oncommand="handleCertificateUsageChange(this, event.originalTarget)"
		    />
                <certificateusagemenu id="keymanager.certificateusagemenu.2" seltype="single"/>
	    </hbox>
          </row>
	  -->

          <row>
	    <label value="tokenmenulist.1"/>
	    <hbox>
                <tokenmenulist id="keymanager.tokenmenulist.1"
                    oncommand="onTokenMenuChange(this, event.originalTarget)"
	        />
	        <spacer flex="1"/>
	    </hbox>
          </row>

          <row>
	    <label value="certpicker.default.ObjectSigner.1"/>
	    <hbox pack="start">
                <certpicker id="keymanager.certpicker.1"
		    certusagehidden="false"
		    certusage="ObjectSigner"
		    viewhidden="false"
		    includeTokenInfo="true"
               	    oncommand="handleCertPickerEvents(this, event.originalTarget);"
	    	    >
	        </certpicker>
	    </hbox>
          </row>
          <row>
	    <label value="certpicker.ca.VerifyCA.11"/>
	    <hbox pack="start">
                <certpicker id="keymanager.certpicker.11"
			tokentypehidden="true"
			certtype="ca"
			certtypehidden="true"
			certusage="VerifyCA"
			certusagehidden="false"
			certusagedisabled="true"
	    	    	/>
	    </hbox>
          </row>
          <row>
	    <label value="certpicker.server.EmailSigner.11"/>
	    <hbox pack="start">
                <certpicker id="certpicker.server.EmailSigner.11"
			    tokentypehidden="true"
			    certtype="server"
			    certtypehidden="true"
			    certusage="EmailSigner"
			    certusagehidden="false"
			    certusagedisabled="true"
			    />
	    </hbox>
          </row>
          <row>
	    <label value="certpicker.email.EmailSigner.22"/>
	    <hbox pack="start">
                <certpicker id="certpicker.email.EmailSigner.22"
			    tokentypehidden="true"
			    certtype="email"
			    certtypehidden="true"
			    certusage="EmailSigner"
			    certusagehidden="false"
			    certusagedisabled="true"
			    />
	    </hbox>
          </row>
    	  <!--
    	  -->
		<!--
	        <button id="ossl.keyconf.key.source.cmd.import"
	  	    label="Import"
               	    oncommand="importKeyFromKeyStore('keymanager.certpicker.1');"/>
		    tokentypehidden="true"
		    certtypehidden="true"
		-->

          <row>
	    <label value="certpicker.user.2"/>
            <certpicker id="keymanager.certpicker.2"
	        tokentype="softtoken"
	        certtype="user"
		certusage="EmailSigner"
		certusagehidden="false"
		certusagedisabled="true"
  		menutooltiptext="&keymgr.scepclient.pkcsreq.user.cert.menulist.tooltip;"
	  	viewlabel="&keymgr.scepclient.pkcsreq.user.cert.view.label;"
  		viewtooltiptext="&keymgr.scepclient.pkcsreq.user.cert.view.tooltip;"
		viewhidden="false"
		includeTokenInfo="true"
               	oncommand="handleCertPickerEvents(this, event.originalTarget);"
	    	>
	        <button id="ossl.keyconf.key.source.cmd.enable"
	  	    label="Disable"
               	    oncommand="disableCertPicker(this, 'keymanager.certpicker.2');"/>
	    </certpicker>
          </row>

          <row>
	    <label value="certitem.1"/>
	    <hbox>
                <certitem id="keymanager.certitem.1"
		    certtypehidden="false"
		    />
	        <spacer flex="1"/>
	    </hbox>
          </row>

          <row>
	    <label value="certitem.2"/>
	    <hbox>
                <certitem id="keymanager.certitem.2"
		    xcerttypehidden="true"
		    showcerttype="true"
		    />
	        <spacer flex="1"/>
	    </hbox>
          </row>

          <row>
	    <label value="certpickertest.1"/>
	    <hbox>
                <certpickertest id="keymanager.certpickertest.1"
		    />
	        <spacer flex="1"/>
	    </hbox>
          </row>

	  <!--
	  -->

        </rows>
    </grid>
</window>


